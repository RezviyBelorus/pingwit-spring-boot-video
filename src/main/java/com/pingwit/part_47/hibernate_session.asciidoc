== Hibernate Session

`Hibernate-сессия` — это основной интерфейс, который Hibernate предоставляет для работы с базой данных. Она представляет собой единицу взаимодействия между приложением и базой данных и отвечает за выполнение CRUD-операций (создание, чтение, обновление, удаление), управление транзакциями, кэшированием, а также за отслеживание состояния объектов.


=== `Основные характеристики Hibernate-сессии:`
1. *Единица работы (Unit of Work):* Hibernate-сессия используется для группировки операций с базой данных, таких как создание, чтение, обновление и удаление данных. Обычно она связана с одной транзакцией, и все операции, выполняемые через одну сессию, будут либо закоммичены, либо откатаны вместе.

2. *Управление состоянием объектов:* В пределах одной сессии Hibernate отслеживает состояние объектов. Например, когда вы загружаете объект из базы данных, он помещается в контекст сессии, и Hibernate отслеживает изменения в нём. При завершении транзакции Hibernate автоматически синхронизирует (сохраняет) изменения в базе данных.

3. *Кэширование:* Hibernate-сессия включает кэш первого уровня (First-Level Cache), который хранит загруженные объекты в пределах сессии. Это означает, что если вы повторно запрашиваете один и тот же объект в рамках одной сессии, Hibernate не выполнит повторный запрос к базе данных, а вернёт объект из кэша.

4. *Жизненный цикл сессии:* Каждая Hibernate-сессия создаётся для выполнения определённых операций и затем закрывается. Поскольку сессия не является потокобезопасной, она должна использоваться только одним потоком. В большинстве приложений для каждой транзакции или HTTP-запроса создаётся отдельная сессия.

5. *Закрытие сессии:* После завершения работы с базой данных и выполнении всех необходимых операций сессия должна быть закрыта с помощью метода close(), чтобы освободить ресурсы. Если сессия не закрыта, могут возникнуть утечки памяти и блокировки базы данных.